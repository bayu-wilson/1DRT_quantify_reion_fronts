#!/bin/bash                    
#SBATCH --job-name="varyLum"          
#SBATCH --output="../dot_out/varyLum.%N.out"
#SBATCH --account=TG-PHY210041
#SBATCH --partition=shared
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=64
#SBATCH --mem=128Gb   
#SBATCH --export=ALL        
#SBATCH -t 12:00:00   
#SBATCH --mail-user=bwils033@ucr.edu
#SBATCH --mail-type=all

export OMP_NUM_THREADS=64
export KMP_AFFINITY="disabled"
export KMP_LIBRARY=turnaround
export KMP_SCHEDULE="static,balanced"
export KMP_STACKSIZE=256M

module load gcc
###module load anaconda3/2020.11

echo "running uniform density, varying luminosity, parameter space"
### Navigating to main code directory
cd ../

### Use uniform density skewers
sed -i "s/^  inline constexpr bool input_grid.*/  inline constexpr bool input_grid       \{ FALSE \}\; \/\/User-defined input grid\? /" user_inputs.h
sed -i "s/^  inline constexpr double scale_density_factor.*/  inline constexpr double scale_density_factor \{ 1. \}\; /" user_inputs.h

### Hardening correction is turned on because we want to minimized it's effect
sed -i "s/^  inline constexpr bool correct_hardening.*/  inline constexpr bool correct_hardening \{ TRUE \}\; \/\/new BAYU July 15 2022 /" user_inputs.h

### allow geometric attenuation #THIS MUST BE THE SAME AS IN PARAMETERS_INPUT FILE
###sed -i "s/^  inline constexpr double R0.*/  inline constexpr double R0       \{ 5.e+2 \}\; \/\/minimum radius of the grids, keep large to minimize geometric attenuation /" user_inputs.h

### defining spectral index (spectral hardness)
###spectral_indices=(0.500 1.001 1.500 2.000)
spectral_indices=(0.000 0.500 1.000 1.500 2.000 2.500 3.000)
let "len_indices=${#spectral_indices[@]}-1"

input_params=(`cat /expanse/lustre/projects/uot171/bwils033/master_1d_rt/parameters_input/input_params/varyLum.txt`)
let "len_input_params=${#input_params[@]}-4"

echo "Begin for loop"
for j in $(seq 0 $len_indices)
do
	spectral_index=${spectral_indices[j]}
	### creating output directories automatically based on input parameters. If they already exist then they will be deleted.
	###echo dotN${dotN}_a=${spectral_index}/
	for i in $(seq 0 4 $len_input_params)
	do
		Lum=${input_params[i]}
        	R_sim=${input_params[i+1]}
       		R0=${input_params[i+2]}	
		t_max=${input_params[i+3]}	
		N_r=2000 ###$R_sim ### this is not always true obviously	
		cd output_files/
		cd gasprops/
		rm -r ud_a=${spectral_index}_Lum=${Lum}/
		mkdir ud_a=${spectral_index}_Lum=${Lum} ###create a new folder to store the data files
		chmod 775 ud_a=${spectral_index}_Lum=${Lum} ###755 assigns read, write, and execute permission to a specific user, group, or others.
		cd ../../
		sed -i "s/^  inline constexpr double R .*/  inline constexpr double R        \{ R0+${R_sim} \}\;  \/\/Total radius for the spatial grid \(in pkpc\) /" user_inputs.h
		sed -i "s/^  inline constexpr double R0.*/  inline constexpr double R0       \{ ${R0} \}\; \/\/minimum radius of the grids, keep large to minimize geometric attenuation /" user_inputs.h
		sed -i "s/^  inline constexpr int N_r.*/  inline constexpr int N_r \{ ${N_r} \}\;/" user_inputs.h
		sed -i "s/^  inline constexpr double t_max.*/  inline constexpr double t_max \{ ${t_max} \}\; \/\/Runtime (in Myr)/" user_inputs.h
		sed -i "s/^  inline constexpr char gas_output\[\].*/  inline constexpr char gas_output\[\] \{\"output_files\/gas_test_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h

		sed -i "s/^  inline constexpr double alpha.*/  inline constexpr double alpha \{ ${spectral_index} \}\; \/\/spectral power law index if spectrum is a power law/" user_inputs.h
		sed -i "s/^  inline constexpr double Lum.*/  inline constexpr double Lum \{  ${Lum} \}\; /" user_inputs.h
		sed -i "s/^  inline constexpr char otf_dir\[\].*/  inline constexpr char otf_dir\[\] \{\"output_files\/gasprops\/ud_a=${spectral_index}_Lum=${Lum}\/\"\}\;/" user_inputs.h

		make clean
		make
		###echo $spectral_index
		###echo $Lum
		###echo $R_sim
		###echo $t_max
		echo "beginning ./1d_radtransfer.x" 
		./1d_radtransfer.x
	done
done
##cd pbs_scripts

###cd plotting_routines/
###python make_movie.py ${skewer} ${spectral_index}
###cd ../

cd pbs_scripts/

