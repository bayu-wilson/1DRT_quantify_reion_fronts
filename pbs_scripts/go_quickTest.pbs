#!/bin/bash                    
#SBATCH --job-name="diagnostic_run"          
#SBATCH --output="../dot_out/dr.%N.out"
#SBATCH --account=TG-PHY210041
#SBATCH --partition=shared
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=64
#SBATCH --mem=128Gb   
#SBATCH --export=ALL        
#SBATCH -t 00:30:00   
#SBATCH --mail-user=bwils033@ucr.edu
#SBATCH --mail-type=all

export OMP_NUM_THREADS=64
export KMP_AFFINITY="disabled"
export KMP_LIBRARY=turnaround
export KMP_SCHEDULE="static,balanced"
export KMP_STACKSIZE=256M

module load gcc
module load anaconda3/2020.11

echo "running diagnostic test"
### Navigating to main code directory
cd ../

### Using inhomogeneous density fields from Matthew McQuinn's simulations
sed -i "s/^  inline constexpr bool input_grid.*/  inline constexpr bool input_grid       \{ TRUE \}\; \/\/User-defined input grid\? /" user_inputs.h

### Setting constant skewer length and cell size to get cell size of 0.735 pkpc
Rsim='1000'
sed -i "s/^  inline constexpr double R .*/  inline constexpr double R        \{ R0+${Rsim} \}\;  \/\/Total radius for the spatial grid \(in pkpc\) /" user_inputs.h
N_r='1360'
sed -i "s/^  inline constexpr int N_r.*/  inline constexpr int N_r \{ ${N_r} \}\;/" user_inputs.h

### Which skewer to use
skewer='0000'
sed -i "s/^  inline constexpr char skewer\[\].*/  inline constexpr char skewer\[\] \{\"${skewer}\"\} \;/" user_inputs.h
sed -i "s/^  inline constexpr char grid_input\[\].*/  inline constexpr char grid_input\[\] \{\"input_files\/hydro_skewers\/spec_xHeII1_007_ls_line${skewer}\.dat\"\}\;/" user_inputs.h

### ionizing photon rate incident on the skewer
dotN='1.00904e+57'
sed -i "s/^  inline constexpr double dotN.*/  inline constexpr double dotN \{  ${dotN} \}\; /" user_inputs.h

### simulation runtime
t_max='50'
sed -i "s/^  inline constexpr double t_max.*/  inline constexpr double t_max \{ ${t_max} \}\; \/\/Runtime (in Myr)/" user_inputs.h
sed -i "s/^  inline constexpr char gas_output\[\].*/  inline constexpr char gas_output\[\] \{\"output_files\/gas_test_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h

### defining spectral index (spectral hardness)
spectral_index='-0.500'

### creating output directories automatically based on input parameters. If they already exist then they will be deleted.
###echo dotN${dotN}_a=${spectral_index}/
cd output_files/
cd gasprops/
rm -r sk${skewer}_a=${spectral_index}/
mkdir sk${skewer}_a=${spectral_index} ###create a new folder to store the data files
chmod 775 sk${skewer}_a=${spectral_index} ###755 assigns read, write, and execute permission to a specific user, group, or others.
cd ../../
sed -i "s/^  inline constexpr double alpha.*/  inline constexpr double alpha \{ ${spectral_index} \}\; \/\/spectral power law index if spectrum is a power law/" user_inputs.h

make clean
make
echo "beginning ./1d_radtransfer.x" 
./1d_radtransfer.x

##cd pbs_scripts

###cd plotting_routines/
###python make_movie.py ${skewer} ${spectral_index}
###cd ../

cd pbs_scripts/

