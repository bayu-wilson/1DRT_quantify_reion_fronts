#!/bin/bash

###uniform_density = 'FALSE'
###if [uniform_density = 'TRUE']
###then
###    sed -i '' "s/^temperature = .*/temperature = 1e2/" get_rho_fluc.py
###else
###    sed -i '' "s/^temperature = .*/temperature = 2e4/" get_rho_fluc.py
###fi

# echo "Number of lines:"
# wc -l input_files/gas_test_hydro_000myr.txt
# python input_files/get_rho_fluc.py
###python input_files/get_steady_rho.py

# initial_field='rho_fluc_line0001.txt'
#initial_field='steady_rho.txt'
# sed -i '' "s/^inline constexpr char grid\[\].*/inline constexpr char grid\[\] \{\"input_files\/${initial_field}\"\}\;/" user_inputs.h

# alpha='1.5'
# t_max='100'
# sed -i '' "s/^  inline constexpr double alpha.*/  inline constexpr double alpha \{ ${alpha} \}\; \/\/spectral power law index if spectrum is a power law/" user_inputs.h
# sed -i '' "s/^  inline constexpr double t_max.*/  inline constexpr double t_max \{${t_max}\}\; \/\/Runtime (in Myr)/" user_inputs.h

# indices=`cat ./spectral_indices.txt`
t_max='200'
sed -i '' "s/^  inline constexpr double t_max.*/  inline constexpr double t_max \{${t_max}\}\; \/\/Runtime (in Myr)/" user_inputs.h
sed -i '' "s/^  inline constexpr char gas_output\[\].*/  inline constexpr char gas_output\[\] \{\"output_files\/gas_test_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h
N_r='408'
sed -i '' "s/^  inline constexpr int N_r.*/  inline constexpr int N_r \{ ${N_r} \}\;/" user_inputs.h
#
#
# indices=($(seq 0.5 0.2 2.5))
# len="${#indices[@]}"
# for (( i=0; i<len; i++))
# do
#   echo a=${indices[i]}
#   cd output_files/
#   cd gasprops/
#   mkdir a=${indices[i]} ###create a new folder to store the data files
#   chmod 775 a=${indices[i]} ###755 assigns read, write, and execute permissionto a specific user, group, or others.
#   cd ../
#   cd incident_spectra/
#   mkdir a=${indices[i]}
#   chmod 775 a=${indices[i]}
#   cd ../../
#
#   sed -i '' "s/^  inline constexpr double alpha.*/  inline constexpr double alpha \{ ${indices[i]} \}\; \/\/spectral power law index if spectrum is a power law/" user_inputs.h
#
#   make clean
#   make
#   ./1d_radtransfer.x
# done


#//spectral power law index if spectrum is a power law.
# t_max='100'
# sed -i '' "s/^inline constexpr double t_max.*/inline constexpr double t_max \{${t_max}\}\; \/\/Runtime (in Myr)/" user_inputs.h
# sed -i '' "s/^inline constexpr char spec_output\[\].*/inline constexpr char spec_output\[\] \{ \"output_files\/spectrum_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h
# sed -i '' "s/^inline constexpr char gas_output\[\].*/inline constexpr char gas_output\[\] \{ \"output_files\/gas_test_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h
# sed -i '' "s/^inline constexpr char otf_output\[\].*/inline constexpr char otf_output\[\] \{ \"output_files\/otf_test_hydro_${t_max}myr\.txt\"\}\;/" user_inputs.h
# sed -i '' "s/^inline constexpr char otf_output_bayu\[\].*/inline constexpr char otf_output_bayu\[\] \{ \"output_files\/otf_bayu_${t_max}myr\.txt\"\}\; \/\/added 21\/12\/10/" user_inputs.h
# make clean
# make
# ./1d_radtransfer.x
#
# python plotting_routines/diagnostics.py
# python plotting_routines/gas_properties.py
# python plotting_routines/density_vs_intensity.py
# python plotting_routines/iLya_vs_vIF/iLya_vs_flux-v.py
